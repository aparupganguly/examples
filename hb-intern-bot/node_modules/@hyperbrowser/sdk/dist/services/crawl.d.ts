import { CrawlJobResponse, CrawlJobStatusResponse, GetCrawlJobParams, StartCrawlJobParams, StartCrawlJobResponse } from "../types/crawl";
import { BaseService } from "./base";
export declare class CrawlService extends BaseService {
    /**
     * Start a new crawl job
     * @param params The parameters for the crawl job
     */
    start(params: StartCrawlJobParams): Promise<StartCrawlJobResponse>;
    /**
     * Get the status of a crawl job
     * @param id The ID of the crawl job to get
     */
    getStatus(id: string): Promise<CrawlJobStatusResponse>;
    /**
     * Get the status of a crawl job
     * @param id The ID of the crawl job to get
     * @param params Optional parameters to filter the crawl job
     */
    get(id: string, params?: GetCrawlJobParams): Promise<CrawlJobResponse>;
    /**
     * Start a crawl job and wait for it to complete
     * @param params The parameters for the crawl job
     * @param returnAllPages Whether to return all pages in the crawl job response
     */
    startAndWait(params: StartCrawlJobParams, returnAllPages?: boolean): Promise<CrawlJobResponse>;
}
